!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.DonutChart=e():t.DonutChart=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};function a(t,e,a,o,s,n,i){t.fillStyle=i,t.beginPath(),t.moveTo(e,a),t.arc(e,a,o,s,n),t.closePath(),t.fill()}t.d(e,{default:()=>o});const o=class{constructor(t,e){if(this.canvas=t,this.options=e,this.canvas.getContext){const t=this.canvas.getContext("2d");this.draw(t)}}draw(t){const{data:e,colors:o,holeSize:s}=this.options;let n=0;Object.keys(e).forEach((t=>{n+=e[t]}));let i=1.5*Math.PI,h=0;Object.keys(e).forEach((s=>{const c=e[s],r=2*Math.PI*c/n;a(t,this.canvas.width/2,this.canvas.height/2,Math.min(this.canvas.width/2,this.canvas.height/2),i,i+r,o[h%o.length]),i+=r,h+=1})),s&&a(t,this.canvas.width/2,this.canvas.height/2,s*Math.min(this.canvas.width/2,this.canvas.height/2),0,2*Math.PI,"#ffffff")}};return e.default})()}));